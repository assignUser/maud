# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "trunk" ]
  pull_request:
    branches: [ "trunk" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      LANG: en_US.UTF-8
      build_output_dir: "${{ github.workspace }}/.build"

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, windows-latest]
        c_compiler: [clang] #, gcc, cl]
        include:
          # - os: windows-latest
          #   c_compiler: cl
          #   cpp_compiler: cl
          # - os: ubuntu-latest
          #   c_compiler: gcc
          #   cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        # exclude:
        #   - os: windows-latest
        #     c_compiler: gcc
        #   - os: windows-latest
        #     c_compiler: clang
        #   - os: ubuntu-latest
        #     c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - uses: flox/install-flox-action@v2

    - name: Run Maud
      uses: flox/activate-action@v1
      with:
        command: >
          cmake -P cmake_modules/maud_cli.cmake --
          --log-level=VERBOSE
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          --generate-only

    - name: Build
      uses: flox/activate-action@v1
      with:
        command: cmake --build ${{ env.build_output_dir }} --config Debug

    - name: Test
      uses: flox/activate-action@v1
      with:
        command: >
          ctest --build-config Debug \
                --test-dir ${{ env.build_output_dir }} \
                --output-on-failure

    - name: Upload doc files
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ env.build_output_dir }}/documentation/dirhtml

  deploy:
    #if: ${{ success() && github.event_name == 'push' && github.ref == 'trunk' }}
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
